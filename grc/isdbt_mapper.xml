<?xml version="1.0"?>
<block>
  <name>Mapper and Bit Interleaver</name>
  <key>isdbt_mapper</key>
  <category>ISDBT</category>
  <import>import isdbt</import>
  <make>isdbt.mapper($mode, $constellation, $IsFullSeg)</make>
  <!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
  <param>
     <name>Transmission Mode</name>
   <key>mode</key>
   <value>1</value>
   <type>enum</type>
     <option>
     <name>MODE1(2K)</name>
     <key>1</key>
     </option>
   <option>
     <name>MODE2(4K)</name>
     <key>2</key>
   </option>
   <option>
     <name>MODE3(8K)</name>
     <key>3</key>
   </option>
 </param>

  <param>
     <name>Constellation Type</name>
   <key>constellation</key>
   <value>1</value>
   <type>enum</type>
     <option>
     <name>QPSK</name>
     <key>1</key>
     </option>
   <option>
     <name>16QAM</name>
     <key>2</key>
   </option>
   <option>
     <name>64QAM</name>
     <key>3</key>
   </option>
 </param>

   <param>
      <name>FullSeg Tx</name>
      <key>IsFullSeg</key>
      <value>True</value>
      <type>enum</type>
      <option>
          <name>Yes</name>
          <key>True</key>
      </option>
      <option>
          <name>No</name>
          <key>False</key>
      </option>
  </param>

  <sink>
    <name>in</name>
    <type>unsigned char</type>
    <vlen>(12*($IsFullSeg) + 1)*96*(2**($mode-1))*($constellation)</vlen>
  </sink>

  <source>
    <name>out</name>
    <type>complex</type>
    <vlen>(12*($IsFullSeg) + 1)*96*(2**($mode-1))</vlen>
  </source>

</block>
